version: '3.8'
services:
  rabbitmq:
    image: rabbitmq:3-management
    ports:
      - "5672:5672"
      - "15672:15672"

  zookeeper:
    image: confluentinc/cp-zookeeper:7.4.0
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181

  kafka:
    image: confluentinc/cp-kafka:7.4.0
    depends_on:
      - zookeeper
      - sqlserver
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1

  kafdrop:
    image: obsidiandynamics/kafdrop
    depends_on:
      - kafka
    ports:
      - "9000:9000"
    environment:
      KAFKA_BROKERCONNECT: kafka:9092 

  jaeger:
    image: jaegertracing/all-in-one:1.45
    ports:
      - "6831:6831/udp"
      - "16686:16686" 

  keycloak:
    image: quay.io/keycloak/keycloak:24.0.1
    command: start-dev --import-realm
    environment:
      KC_DB: postgres
      KC_DB_URL_HOST: postgres
      KC_DB_URL_PORT: 5432
      KC_DB_URL_DATABASE: keycloak
      KC_DB_USERNAME: keycloak
      KC_DB_PASSWORD: keycloak
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin
    volumes:
      - ./docker/keycloak/realm.json:/opt/keycloak/data/import/realm.json
    ports:
      - "8443:8080"
    depends_on:
      - postgres

  postgres:
    image: postgres:16
    environment:
      POSTGRES_DB: keycloak
      POSTGRES_USER: keycloak
      POSTGRES_PASSWORD: keycloak
    ports:
      - "5433:5432" 

  sqlserver:
    image: mcr.microsoft.com/mssql/server:2022-latest
    ports:
      - "1433:1433"
    environment:
      ACCEPT_EULA: "Y"
      MSSQL_PID: "Developer"
      SA_PASSWORD: "Pass@word1"
    volumes:
      - ./docker/sqlserver/init/:/docker-entrypoint-initdb.d/
    healthcheck:
      test: [ "CMD-SHELL", "\"/opt/mssql-tools/bin/sqlcmd\" -S localhost -U sa -P Pass@word1 -Q \"SELECT 1\"" ]
      interval: 10s
      timeout: 5s
      retries: 10

  connect:
    image: debezium/connect:2.5
    depends_on:
      - kafka
      - sqlserver
    ports:
      - "8083:8083"
    environment:
      BOOTSTRAP_SERVERS: kafka:9092
      GROUP_ID: 1
      CONFIG_STORAGE_TOPIC: debezium_connect_config
      OFFSET_STORAGE_TOPIC: debezium_connect_offset
      STATUS_STORAGE_TOPIC: debezium_connect_status
      KEY_CONVERTER_SCHEMAS_ENABLE: "false"
      VALUE_CONVERTER_SCHEMAS_ENABLE: "false"
    volumes:
      - ./docker/connect/:/docker/scripts/ 

  rabbitmq-exporter:
    image: kbudde/rabbitmq-exporter
    environment:
      RABBIT_URL: http://rabbitmq:15672
      RABBIT_USER: guest
      RABBIT_PASSWORD: guest
    ports:
      - "9419:9419"
    depends_on:
      - rabbitmq

  kafka-exporter:
    image: quay.io/cloudhut/kminion:v2.0.4
    environment:
      KMINION_KAFKA_BROKERS: kafka:9092
    ports:
      - "8090:8080"
    depends_on:
      - kafka 